<!-- Build file -->
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- 
    Variables that can be overriden by CI machine (official build):
      - WebSdkVersion -  web sdk full version
      - WebSdkPackagesDropDir [Required] - official drop folder path for web packages
  -->


	<!-- 
	PipeBuild overrides:
	
	PB_SignType {''|'public'|'real'|'test'} Disables signing if set to a value other than 'real' 
	PB_SkipTests {''|'true'|'false'} Disables tests if set to 'true'.
	-->

  <PropertyGroup>
    <VersionPrefix Condition="'$(VersionPrefix)' == ''">2.0.0</VersionPrefix>
  </PropertyGroup>

  <Target Name="Build" DependsOnTargets="Init;_Build"/>

  <Target Name="Init" DependsOnTargets="_InitWebSdk" />

  <Target Name="_InitWebSdk" Condition="'$(WebSdkVersion)' == ''">
    <PropertyGroup>
      <CurrentDate Condition="'$(CurrentDate)'==''">-$([System.DateTime]::Now.ToString(yyyyMMdd))</CurrentDate>
      <BUILD_NUMBER Condition="'$(BUILD_NUMBER)' == ''">1</BUILD_NUMBER>
      <BuildBranchName Condition="'$(BuildBranchName)' == ''">dev</BuildBranchName>
      <WebSdkVersion Condition="'$(WebSdkVersion)' == ''">$(VersionPrefix)-$(BuildBranchName)$(CurrentDate)-$(BUILD_NUMBER)</WebSdkVersion>
    </PropertyGroup>
  </Target>

  <Target Name="_RestoreSolution">
    <Exec Command="$(DOTNET_INSTALL_DIR)/dotnet restore $(WebSdkRoot)\Microsoft.Net.Sdk.Web.Sln /p:configuration=Release /p:SkipInvalidConfigurations=true" />
  </Target>

  <Target Name="_BuildProduct">
    <Exec Command="$(DOTNET_INSTALL_DIR)/dotnet build $(WebSdkRoot)\src\Publish\Microsoft.NET.Sdk.Publish.Tasks\Microsoft.NET.Sdk.Publish.Tasks.csproj /p:configuration=Release /p:SkipInvalidConfigurations=true" />
  </Target>

  <Target Name="_CopyArtifacts">
    <!--Copy publish sdks-->
    <Copy SourceFiles="$(WebSdkSource)\Publish\Microsoft.NET.Sdk.Publish.Targets\Sdk.props"
        DestinationFiles="$(DOTNET_INSTALL_DIR)\Sdk\$(DOTNET_VERSION)\Sdks\Microsoft.NET.Sdk.Publish\Sdk\Sdk.props"
        OverwriteReadOnlyFiles="true" />

    <Copy SourceFiles="$(WebSdkSource)\Publish\Microsoft.NET.Sdk.Publish.Targets\Sdk.targets"
        DestinationFiles="$(DOTNET_INSTALL_DIR)\Sdk\$(DOTNET_VERSION)\Sdks\Microsoft.NET.Sdk.Publish\Sdk\Sdk.targets"
        OverwriteReadOnlyFiles="true" />

    <!--Copy project system sdks-->
    <Copy SourceFiles="$(WebSdkSource)\ProjectSystem\Microsoft.NET.Sdk.Web.ProjectSystem.Targets\Sdk.props"
        DestinationFiles="$(DOTNET_INSTALL_DIR)\Sdk\$(DOTNET_VERSION)\Sdks\Microsoft.NET.Sdk.Web.ProjectSystem\Sdk\Sdk.props"
        OverwriteReadOnlyFiles="true" />

    <Copy SourceFiles="$(WebSdkSource)\ProjectSystem\Microsoft.NET.Sdk.Web.ProjectSystem.Targets\Sdk.targets"
        DestinationFiles="$(DOTNET_INSTALL_DIR)\Sdk\$(DOTNET_VERSION)\Sdks\Microsoft.NET.Sdk.Web.ProjectSystem\Sdk\Sdk.targets"
        OverwriteReadOnlyFiles="true" />

    <!--Copy web sdks-->
    <Copy SourceFiles="$(WebSdkSource)\Web\Microsoft.NET.Sdk.Web.Targets\Sdk.props"
        DestinationFiles="$(DOTNET_INSTALL_DIR)\Sdk\$(DOTNET_VERSION)\Sdks\Microsoft.NET.Sdk.Web\Sdk\Sdk.props"
        OverwriteReadOnlyFiles="true" />

    <Copy SourceFiles="$(WebSdkSource)\Web\Microsoft.NET.Sdk.Web.Targets\Sdk.targets"
        DestinationFiles="$(DOTNET_INSTALL_DIR)\Sdk\$(DOTNET_VERSION)\Sdks\Microsoft.NET.Sdk.Web\Sdk\Sdk.targets"
        OverwriteReadOnlyFiles="true" />

    <!-- Copy Publish targets and project system targets-->
    <PropertyGroup>
      <_PublishTargetDestination>$(DOTNET_INSTALL_DIR)\Sdk\$(DOTNET_VERSION)\Sdks\Microsoft.NET.Sdk.Publish\build\netstandard1.0\</_PublishTargetDestination>
      <_ProjectSystemTargetDestination>$(DOTNET_INSTALL_DIR)\Sdk\$(DOTNET_VERSION)\Sdks\Microsoft.NET.Sdk.Web.ProjectSystem\build\netstandard1.0\</_ProjectSystemTargetDestination>
    </PropertyGroup>

    <ItemGroup>
      <_PublishTargets Include="$(WebSdkSource)\Publish\Microsoft.NET.Sdk.Publish.Targets\netstandard1.0\**\*.*" />
      <_ProjectSystemTargets Include="$(WebSdkSource)\ProjectSystem\Microsoft.NET.Sdk.Web.ProjectSystem.Targets\netstandard1.0\**\*.*" />
    </ItemGroup>

    <Copy SourceFiles="@(_PublishTargets)"
        DestinationFiles="@(_PublishTargets -> '$(_PublishTargetDestination)%(RecursiveDir)%(FileName)%(Extension)')"
        OverwriteReadOnlyFiles="true" />

    <Copy SourceFiles="@(_ProjectSystemTargets)"
        DestinationFiles="@(_ProjectSystemTargets -> '$(_ProjectSystemTargetDestination)%(RecursiveDir)%(FileName)%(Extension)')"
        OverwriteReadOnlyFiles="true" />

    <!-- Copy Publish tasks-->
    <Copy SourceFiles="$(WebSdkbin)\Release\net46\win7-x86\Microsoft.NET.Sdk.Publish.Tasks.dll"
        DestinationFiles="$(DOTNET_INSTALL_DIR)\Sdk\$(DOTNET_VERSION)\Sdks\Microsoft.NET.Sdk.Publish\tools\net46\Microsoft.NET.Sdk.Publish.Tasks.dll"
        OverwriteReadOnlyFiles="true" />

    <Copy SourceFiles="$(WebSdkbin)\Release\netstandard1.3\Microsoft.NET.Sdk.Publish.Tasks.dll"
        DestinationFiles="$(DOTNET_INSTALL_DIR)\Sdk\$(DOTNET_VERSION)\Sdks\Microsoft.NET.Sdk.Publish\tools\netcoreapp1.0\Microsoft.NET.Sdk.Publish.Tasks.dll"
        OverwriteReadOnlyFiles="true" />

  </Target>

  <Target Name="_BuildTests" Condition="'$(PB_SkipTests)' != 'true'">
    <Exec Command="$(DOTNET_INSTALL_DIR)/dotnet build $(WebSdkRoot)\test\Publish\Microsoft.NET.Sdk.Publish.Tasks.Tests\Microsoft.NET.Sdk.Publish.Tasks.Tests.csproj /p:configuration=Release /p:SkipInvalidConfigurations=true" />
  </Target>

  <Target Name="_RunTests" Condition="'$(PB_SkipTests)' != 'true'"> 
    <Exec  Command="$(DOTNET_INSTALL_DIR)/dotnet test $(WebSdkRoot)\test\Publish\Microsoft.NET.Sdk.Publish.Tasks.Tests\Microsoft.NET.Sdk.Publish.Tasks.Tests.csproj -f=netcoreapp2.0 --no-build /p:configuration=Release /p:SkipInvalidConfigurations=true" />

    <Exec Condition="'$(NETFrameworkSupported)' != 'false'"
     Command="$(DOTNET_INSTALL_DIR)/dotnet test $(WebSdkRoot)\test\Publish\Microsoft.NET.Sdk.Publish.Tasks.Tests\Microsoft.NET.Sdk.Publish.Tasks.Tests.csproj -f=net46 --no-build /p:configuration=Release /p:SkipInvalidConfigurations=true" />
  </Target>

  <Target Name="_GeneratePackages">
    
    <Exec Command="$(DOTNET_INSTALL_DIR)/dotnet restore $(WebSdkRoot)\Microsoft.Net.Sdk.Web.Sln /p:configuration=Release /p:SkipInvalidConfigurations=true" />
    
    <Exec Command="$(DOTNET_INSTALL_DIR)/dotnet build $(WebSdkRoot)\Microsoft.Net.Sdk.Web.Sln /p:configuration=Release /p:SkipInvalidConfigurations=true" />
   
    <Exec Command="$(DOTNET_INSTALL_DIR)/dotnet pack $(WebSdkRoot)\pack\Microsoft.NET.Sdk.Publish\Microsoft.NET.Sdk.Publish.csproj /p:configuration=Release /p:WebSdkVersion=$(WebSdkVersion) /p:SkipInvalidConfigurations=true" />
    
    <Exec Command="$(DOTNET_INSTALL_DIR)/dotnet pack $(WebSdkRoot)\pack\Microsoft.NET.Sdk.Web.ProjectSystem\Microsoft.NET.Sdk.Web.ProjectSystem.csproj /p:configuration=Release /p:WebSdkVersion=$(WebSdkVersion) /p:SkipInvalidConfigurations=true" />

    <Exec Command="$(DOTNET_INSTALL_DIR)/dotnet pack $(WebSdkRoot)\pack\Microsoft.NET.Sdk.Web\Microsoft.NET.Sdk.Web.csproj /p:configuration=Release /p:WebSdkVersion=$(WebSdkVersion) /p:SkipInvalidConfigurations=true" />

  </Target>

  <PropertyGroup>
    <_BuildDependsOn>
      $(_BuildDependsOn);
      _RestoreSolution;
      _BuildProduct;
      _CopyArtifacts;
      _BuildTests;
      _RunTests;
      _GeneratePackages;
    </_BuildDependsOn>
  </PropertyGroup>

  <Target Name="_Build" DependsOnTargets="$(_BuildDependsOn)" />
  
  <!-- Place holder target for signing. Actual signing target is in the below import -->
  <Target Name="Sign" />
  
  <Import Project="$(WebSdkTools)\Microsoft.NET.Sdk.Web.Sign.targets" Condition="Exists('$(WebSdkTools)\MIcrosoft.NET.Sdk.Web.Sign.targets')"/>
</Project>

