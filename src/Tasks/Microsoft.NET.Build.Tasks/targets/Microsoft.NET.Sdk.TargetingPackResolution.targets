<!--
***********************************************************************************************
Microsoft.NET.Sdk.TargetingPackResolution.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.

Copyright (c) .NET Foundation. All rights reserved. 
***********************************************************************************************
-->
<Project>
  <PropertyGroup>
    <ResolveAssemblyReferencesDependsOn>
      $(ResolveAssemblyReferencesDependsOn);
      ResolveTargetingPacks;
    </ResolveAssemblyReferencesDependsOn>
  </PropertyGroup>


  <UsingTask TaskName="ResolveFrameworkReferences" AssemblyFile="$(MicrosoftNETBuildTasksAssembly)" />

  <Target Name="ResolveFrameworkReferences" BeforeTargets="_CheckForInvalidConfigurationAndPlatform;CollectPackageReferences">
    <ItemGroup>
      <!-- The KnownFrameworkReference items that this target expects will be defined in the bundled
           versions .props file. They should look something like this:
           
    <KnownFrameworkReference Include="Microsoft.NETCore.App"
                              TargetFramework="netcoreapp3.0"
                              RuntimeFrameworkName="Microsoft.NETCore.App"
                              DefaultRuntimeFrameworkVersion="3.0.0-preview-27214-02"
                              LatestRuntimeFrameworkVersion="3.0.0-preview-27214-02"
                              TargetingPackName="Microsoft.NETCore.App"
                              TargetingPackVersion="3.0.0-preview-27122-01"
                              AppHostPackNamePattern="runtime.**RID**.Microsoft.NETCore.DotNetAppHost"
                              AppHostRuntimeIdentifiers="freebsd-x64;linux-arm;linux-arm64;linux-musl-x64;linux-x64;osx-x64;rhel.6-x64;tizen.4.0.0-armel;tizen.5.0.0-armel;win-arm;win-arm64;win-x64;win-x86"
                              RuntimePackNamePatterns="runtime.**RID**.Microsoft.NETCore.App;runtime.**RID**.Microsoft.NETCore.DotNetHostResolver;runtime.**RID**.Microsoft.NETCore.DotNetHostPolicy"
                              RuntimePackRuntimeIdentifiers="freebsd-x64;linux-arm;linux-arm64;linux-musl-x64;linux-x64;osx-x64;rhel.6-x64;tizen.4.0.0-armel;tizen.5.0.0-armel;win-arm;win-arm64;win-x64;win-x86"
                              />
      -->

    </ItemGroup>

    <PropertyGroup Condition="'$(AppHostRuntimeIdentifier)' == ''">
      <AppHostRuntimeIdentifier>$(RuntimeIdentifier)</AppHostRuntimeIdentifier>
      <AppHostRuntimeIdentifier Condition="'$(AppHostRuntimeIdentifier)' == ''">$(DefaultAppHostRuntimeIdentifier)</AppHostRuntimeIdentifier>
    </PropertyGroup>

    <ResolveFrameworkReferences FrameworkReferences="@(FrameworkReference)"
                                KnownFrameworkReferences="@(KnownFrameworkReference)"
                                TargetFrameworkIdentifier="$(TargetFrameworkIdentifier)"
                                TargetFrameworkVersion="$(_TargetFrameworkVersionWithoutV)"
                                TargetingPackRoot="$(NetCoreTargetingPackRoot)"
                                AppHostRuntimeIdentifier="$(AppHostRuntimeIdentifier)"
                                RuntimeGraphPath="$(BundledRuntimeIdentifierGraphFile)"
                                SelfContained="$(SelfContained)"
                                RuntimeIdentifier="$(RuntimeIdentifier)"
                                DotNetAppHostExecutableNameWithoutExtension="$(_DotNetAppHostExecutableNameWithoutExtension)">

      <Output TaskParameter="PackagesToDownload" ItemName="PackageReferenceToAdd" />
      <Output TaskParameter="PackagesToReference" ItemName="PackageReference" />
      <Output TaskParameter="RuntimeFrameworks" ItemName="RuntimeFramework" />
      <Output TaskParameter="TargetingPacks" ItemName="TargetingPack" />
      <Output TaskParameter="AppHost" ItemName="AppHostPack" />

      <Output TaskParameter="UnresolvedFrameworkReferences" ItemName="_UnresolvedFrameworkReference" />

    </ResolveFrameworkReferences>

    <ItemGroup>
      <PackageReference Include="@(PackageReferenceToAdd)"
                        IsImplicitlyDefined="true"
                        PrivateAssets="all"
                        ExcludeAssets="all" />
    </ItemGroup>

  </Target>

  <UsingTask TaskName="ReportUnknownFrameworkReferences" AssemblyFile="$(MicrosoftNETBuildTasksAssembly)" />

  <!-- Report unresolved FrameworkReferences in a separate target so that the error is only reported on Build, not Restore. -->
  <Target Name="ReportUnresolvedFrameworkReferences" DependsOnTargets="ResolveFrameworkReferences"
          BeforeTargets="_CheckForInvalidConfigurationAndPlatform"
          Condition="'@(_UnresolvedFrameworkReference)' != ''">

    <!-- Use a custom task in order to report multiple errors instead of stopping on the first one (which would happen if we batched) -->
    <ReportUnknownFrameworkReferences UnresolvedFrameworkReferences="@(_UnresolvedFrameworkReference)"/>

  </Target>


  <UsingTask TaskName="GetPackageDirectory" AssemblyFile="$(MicrosoftNETBuildTasksAssembly)" />
  
  <Target Name="ResolveTargetingPacks" DependsOnTargets="ResolvePackageAssets">

    <GetPackageDirectory
      Items="@(TargetingPack)"
      ProjectPath="$(MSBuildProjectFullPath)"
      PackageFolders="@(AssetFilePackageFolder)">

      <Output TaskParameter="Output" ItemName="ResolvedTargetingPack" />
      
    </GetPackageDirectory>    
    
    <ItemGroup>
      <ResolvedTargetingPack>
        <Path Condition="'%(ResolvedTargetingPack.Path)' == ''">%(PackageDirectory)</Path>
      </ResolvedTargetingPack>
      <Reference Include="%(ResolvedTargetingPack.Path)\ref\netcoreapp3.0\*.dll">
        <ExternallyResolved>true</ExternallyResolved>
        
        <!-- TODO: Work out what metadata we should use here to display these references grouped under the targeting pack
             in solution explorer.  These metadata values are based on what PCLs were using. -->
        <WinMDFile>false</WinMDFile>
        <Private>false</Private>
        <ReferenceGroupingDisplayName>.NET Core</ReferenceGroupingDisplayName>
        <ReferenceGrouping>%(ResolvedTargetingPack.Identity)</ReferenceGrouping>
        <ResolvedFrom>ResolveTargetingPacks</ResolvedFrom>
        <IsSystemReference>True</IsSystemReference>
      </Reference>
    </ItemGroup>
      
    <ItemGroup Condition="'$(RuntimeIdentifier)' == '' or '$(SelfContained)' != 'true'">
      <PackageConflictPlatformManifests Include="%(ResolvedTargetingPack.Path)\build\netcoreapp3.0\Microsoft.NETCore.App.PlatformManifest.txt"
                                        Condition="Exists('%(ResolvedTargetingPack.Path)\build\netcoreapp3.0\Microsoft.NETCore.App.PlatformManifest.txt')"/>
    </ItemGroup>

    <GetPackageDirectory
      Items="@(AppHostPack)"
      ProjectPath="$(MSBuildProjectFullPath)"
      PackageFolders="@(AssetFilePackageFolder)">

      <Output TaskParameter="Output" ItemName="ResolvedAppHostPack" />

    </GetPackageDirectory>

    <ItemGroup>
      <ResolvedAppHostPack>
        <Path Condition="'%(ResolvedAppHostPack.Path)' == ''">%(PackageDirectory)\%(RelativePath)</Path>
      </ResolvedAppHostPack>      
    </ItemGroup>

    <PropertyGroup Condition="'@(ResolvedAppHostPack)' != '' And '$(AppHostSourcePath)' == ''">
      <AppHostSourcePath>@(ResolvedAppHostPack->'%(Path)')</AppHostSourcePath>
    </PropertyGroup>

  </Target>
</Project>
