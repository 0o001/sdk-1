<!-- Build file -->
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- 
    PipeBuild overrides:

    PB_SignType            {''|'public'|'real'|'test'}    Disables signing if set to a value other than 'real' 
    PB_SkipTests           {''|'true'|'false'}            Disables tests if set to 'true'.
  -->

  <PropertyGroup>
    <UseDotNetExe Condition="'$(UseDotNetExe)' == ''">false</UseDotNetExe>
    <DOTNET_EXE_PATH>&quot;$(DOTNET_INSTALL_DIR)/dotnet&quot;</DOTNET_EXE_PATH>
    <Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
  </PropertyGroup>

  <Target Name="Build" DependsOnTargets="_Build;Test;Package"/>

  <PropertyGroup>
    <_BuildDependsOn>
      $(_BuildDependsOn);
      _RestoreSolution;
      _BuildProduct;
      _BuildTests;
    </_BuildDependsOn>
  </PropertyGroup>

  <Target Name="_Build" DependsOnTargets="$(_BuildDependsOn)" />

  <Target Name="_RestoreSolution">
    
    <!-- Using dotnet exe-->
    <Exec Condition="'$(UseDotNetExe)' == 'true'" 
          Command="$(DOTNET_EXE_PATH) restore &quot;$(WebSdkRoot)/Microsoft.NET.Sdk.Web.sln&quot; /p:Configuration=$(Configuration)" />

    <!-- Using msbuild-->
    <ItemGroup>
      <SolutionFile Include="$(WebSdkRoot)/Microsoft.NET.Sdk.Web.sln" />
    </ItemGroup>
    
    <MSBuild Condition="'$(UseDotNetExe)' == 'false'"
             Projects="@(SolutionFile)"
             Targets ="Restore"/>
  </Target>

  <Target Name="_BuildProduct">

    <!-- Using dotnet exe-->
    <Exec Condition="'$(UseDotNetExe)' == 'true'" 
          Command="$(DOTNET_EXE_PATH) build &quot;$(WebSdkRoot)/src/Publish/Microsoft.NET.Sdk.Publish.Tasks/Microsoft.NET.Sdk.Publish.Tasks.csproj&quot; /p:Configuration=$(Configuration)" />

    <!-- Using msbuild-->
    <ItemGroup>
      <ProjectFile Include="$(WebSdkRoot)/src/Publish/Microsoft.NET.Sdk.Publish.Tasks/Microsoft.NET.Sdk.Publish.Tasks.csproj" />
    </ItemGroup>

    <MSBuild Condition="'$(UseDotNetExe)' == 'false'"
             Projects="@(ProjectFile)"
             Targets ="build"/>
  </Target>

  <Target Name="_BuildTests" Condition="'$(PB_SkipTests)' != 'true'">

    <!-- Using dotnet exe-->
    <Exec Condition="'$(UseDotNetExe)' == 'true'"
          Command="$(DOTNET_EXE_PATH) build &quot;$(WebSdkRoot)/test/Publish/Microsoft.NET.Sdk.Publish.Tasks.Tests/Microsoft.NET.Sdk.Publish.Tasks.Tests.csproj&quot; /p:Configuration=$(Configuration)" />

    <!-- Using msbuild-->
    <ItemGroup>
      <TestProject Include="$(WebSdkRoot)/test/Publish/Microsoft.NET.Sdk.Publish.Tasks.Tests/Microsoft.NET.Sdk.Publish.Tasks.Tests.csproj" />
    </ItemGroup>

    <MSBuild Condition="'$(UseDotNetExe)' == 'false'"
             Projects="@(TestProject)"
             Targets ="build"/>
    
  </Target>

  <Import Project="$(WebSdkBuild)/test.proj" Condition="Exists('$(WebSdkBuild)/test.proj')"/>
  <Import Project="$(WebSdkBuild)/package.proj" Condition="Exists('$(WebSdkBuild)/package.proj')"/>
  <Import Project="$(WebSdkBuild)/publish.proj" Condition="Exists('$(WebSdkBuild)/publish.proj')"/>
  
</Project>

